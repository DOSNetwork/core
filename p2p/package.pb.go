// Code generated by protoc-gen-go. DO NOT EDIT.
// source: package.proto

package p2p

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import any "github.com/golang/protobuf/ptypes/any"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Package struct {
	Anything  *any.Any `protobuf:"bytes,1,opt,name=anything,proto3" json:"anything,omitempty"`
	Signature []byte   `protobuf:"bytes,2,opt,name=signature,proto3" json:"signature,omitempty"`
	// Sender's address and public key.
	Sender []byte `protobuf:"bytes,3,opt,name=sender,proto3" json:"sender,omitempty"`
	// request_nonce is the request/response ID. Null if ID associated to a message is not a request/response.
	RequestNonce uint64 `protobuf:"varint,4,opt,name=request_nonce,json=requestNonce,proto3" json:"request_nonce,omitempty"`
	// reply_flag indicates this is a reply to a request
	ReplyFlag            bool     `protobuf:"varint,5,opt,name=reply_flag,json=replyFlag,proto3" json:"reply_flag,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Package) Reset()         { *m = Package{} }
func (m *Package) String() string { return proto.CompactTextString(m) }
func (*Package) ProtoMessage()    {}
func (*Package) Descriptor() ([]byte, []int) {
	return fileDescriptor_package_ff6a6a12a71b86f2, []int{0}
}
func (m *Package) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Package.Unmarshal(m, b)
}
func (m *Package) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Package.Marshal(b, m, deterministic)
}
func (dst *Package) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Package.Merge(dst, src)
}
func (m *Package) XXX_Size() int {
	return xxx_messageInfo_Package.Size(m)
}
func (m *Package) XXX_DiscardUnknown() {
	xxx_messageInfo_Package.DiscardUnknown(m)
}

var xxx_messageInfo_Package proto.InternalMessageInfo

func (m *Package) GetAnything() *any.Any {
	if m != nil {
		return m.Anything
	}
	return nil
}

func (m *Package) GetSignature() []byte {
	if m != nil {
		return m.Signature
	}
	return nil
}

func (m *Package) GetSender() []byte {
	if m != nil {
		return m.Sender
	}
	return nil
}

func (m *Package) GetRequestNonce() uint64 {
	if m != nil {
		return m.RequestNonce
	}
	return 0
}

func (m *Package) GetReplyFlag() bool {
	if m != nil {
		return m.ReplyFlag
	}
	return false
}

type ID struct {
	// public_key of the peer (we no longer use the public key as the peer ID, but use it to verify messages)
	PublicKey []byte `protobuf:"bytes,1,opt,name=public_key,json=publicKey,proto3" json:"public_key,omitempty"`
	// id is the computed hash of the public key
	Id                   []byte   `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ID) Reset()         { *m = ID{} }
func (m *ID) String() string { return proto.CompactTextString(m) }
func (*ID) ProtoMessage()    {}
func (*ID) Descriptor() ([]byte, []int) {
	return fileDescriptor_package_ff6a6a12a71b86f2, []int{1}
}
func (m *ID) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ID.Unmarshal(m, b)
}
func (m *ID) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ID.Marshal(b, m, deterministic)
}
func (dst *ID) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ID.Merge(dst, src)
}
func (m *ID) XXX_Size() int {
	return xxx_messageInfo_ID.Size(m)
}
func (m *ID) XXX_DiscardUnknown() {
	xxx_messageInfo_ID.DiscardUnknown(m)
}

var xxx_messageInfo_ID proto.InternalMessageInfo

func (m *ID) GetPublicKey() []byte {
	if m != nil {
		return m.PublicKey
	}
	return nil
}

func (m *ID) GetId() []byte {
	if m != nil {
		return m.Id
	}
	return nil
}

type Ping struct {
	Count                uint64   `protobuf:"varint,1,opt,name=count,proto3" json:"count,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Ping) Reset()         { *m = Ping{} }
func (m *Ping) String() string { return proto.CompactTextString(m) }
func (*Ping) ProtoMessage()    {}
func (*Ping) Descriptor() ([]byte, []int) {
	return fileDescriptor_package_ff6a6a12a71b86f2, []int{2}
}
func (m *Ping) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Ping.Unmarshal(m, b)
}
func (m *Ping) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Ping.Marshal(b, m, deterministic)
}
func (dst *Ping) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Ping.Merge(dst, src)
}
func (m *Ping) XXX_Size() int {
	return xxx_messageInfo_Ping.Size(m)
}
func (m *Ping) XXX_DiscardUnknown() {
	xxx_messageInfo_Ping.DiscardUnknown(m)
}

var xxx_messageInfo_Ping proto.InternalMessageInfo

func (m *Ping) GetCount() uint64 {
	if m != nil {
		return m.Count
	}
	return 0
}

type Pong struct {
	Count                uint64   `protobuf:"varint,1,opt,name=count,proto3" json:"count,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Pong) Reset()         { *m = Pong{} }
func (m *Pong) String() string { return proto.CompactTextString(m) }
func (*Pong) ProtoMessage()    {}
func (*Pong) Descriptor() ([]byte, []int) {
	return fileDescriptor_package_ff6a6a12a71b86f2, []int{3}
}
func (m *Pong) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Pong.Unmarshal(m, b)
}
func (m *Pong) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Pong.Marshal(b, m, deterministic)
}
func (dst *Pong) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Pong.Merge(dst, src)
}
func (m *Pong) XXX_Size() int {
	return xxx_messageInfo_Pong.Size(m)
}
func (m *Pong) XXX_DiscardUnknown() {
	xxx_messageInfo_Pong.DiscardUnknown(m)
}

var xxx_messageInfo_Pong proto.InternalMessageInfo

func (m *Pong) GetCount() uint64 {
	if m != nil {
		return m.Count
	}
	return 0
}

func init() {
	proto.RegisterType((*Package)(nil), "p2p.Package")
	proto.RegisterType((*ID)(nil), "p2p.ID")
	proto.RegisterType((*Ping)(nil), "p2p.Ping")
	proto.RegisterType((*Pong)(nil), "p2p.Pong")
}

func init() { proto.RegisterFile("package.proto", fileDescriptor_package_ff6a6a12a71b86f2) }

var fileDescriptor_package_ff6a6a12a71b86f2 = []byte{
	// 265 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x74, 0x90, 0xd1, 0x4a, 0xc3, 0x30,
	0x18, 0x85, 0x49, 0xd7, 0xcd, 0xed, 0xb7, 0xf3, 0x22, 0x0c, 0x29, 0xb2, 0x41, 0xa9, 0x37, 0xbd,
	0xea, 0x64, 0x7b, 0x02, 0x41, 0x04, 0x11, 0x64, 0xe4, 0x05, 0x4a, 0xda, 0xfe, 0x8d, 0x65, 0x25,
	0x89, 0x6d, 0x72, 0x91, 0x07, 0xf3, 0xfd, 0xa4, 0x69, 0xd1, 0x2b, 0x2f, 0x02, 0x39, 0xdf, 0x39,
	0x27, 0x1c, 0x02, 0x5b, 0xcd, 0xab, 0x2b, 0x17, 0x98, 0xeb, 0x5e, 0x19, 0x45, 0x17, 0xfa, 0xa4,
	0x1f, 0x0e, 0xfe, 0x5e, 0xda, 0xe6, 0xa8, 0x8d, 0xd3, 0x38, 0x1c, 0xb9, 0x74, 0xe3, 0x99, 0x32,
	0xe9, 0x37, 0x81, 0x9b, 0xcb, 0xd4, 0xa2, 0x4f, 0xb0, 0xe6, 0xd2, 0x99, 0xcf, 0x56, 0x8a, 0x98,
	0x24, 0x24, 0xbb, 0x3d, 0xed, 0x72, 0xa1, 0x94, 0xe8, 0xe6, 0x07, 0x4b, 0xdb, 0xe4, 0xcf, 0xd2,
	0xb1, 0xdf, 0x14, 0xdd, 0xc3, 0x66, 0x68, 0x85, 0xe4, 0xc6, 0xf6, 0x18, 0x07, 0x09, 0xc9, 0x22,
	0xf6, 0x07, 0xe8, 0x3d, 0xac, 0x06, 0x94, 0x35, 0xf6, 0xf1, 0xc2, 0x5b, 0xb3, 0xa2, 0x8f, 0xb0,
	0xed, 0xf1, 0xcb, 0xe2, 0x60, 0x0a, 0xa9, 0x64, 0x85, 0x71, 0x98, 0x90, 0x2c, 0x64, 0xd1, 0x0c,
	0x3f, 0x46, 0x46, 0x0f, 0x00, 0x3d, 0xea, 0xce, 0x15, 0x4d, 0xc7, 0x45, 0xbc, 0x4c, 0x48, 0xb6,
	0x66, 0x1b, 0x4f, 0x5e, 0x3b, 0x2e, 0xd2, 0x33, 0x04, 0x6f, 0x2f, 0x63, 0x48, 0xdb, 0xb2, 0x6b,
	0xab, 0xe2, 0x8a, 0xce, 0x6f, 0x8e, 0xd8, 0x66, 0x22, 0xef, 0xe8, 0xe8, 0x1d, 0x04, 0x6d, 0x3d,
	0xef, 0x0a, 0xda, 0x3a, 0xdd, 0x43, 0x78, 0x19, 0x67, 0xef, 0x60, 0x59, 0x29, 0x2b, 0x8d, 0x6f,
	0x84, 0x6c, 0x12, 0xde, 0x55, 0xff, 0xb9, 0xe5, 0xca, 0x7f, 0xc1, 0xf9, 0x27, 0x00, 0x00, 0xff,
	0xff, 0x1c, 0x9a, 0x85, 0xaf, 0x64, 0x01, 0x00, 0x00,
}
