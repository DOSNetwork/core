package onchain

import (
	"math/big"

	"github.com/ethereum/go-ethereum/common"
	"github.com/ethereum/go-ethereum/core/types"
)

type LogCommon struct {
	Tx      string
	BlockN  uint64
	Removed bool
	Raw     types.Log
	log     interface{}
}

//LogUrl is an onchain event that DOSProxy requests a query result from the specified URL
type LogUrl struct {
	QueryId           *big.Int
	Timeout           *big.Int
	DataSource        string
	Selector          string
	Randomness        *big.Int
	DispatchedGroupId *big.Int
}

//LogRequestUserRandom is an onchain event that DOSProxy requests a random number with RequestID
type LogRequestUserRandom struct {
	RequestId            *big.Int
	LastSystemRandomness *big.Int
	UserSeed             *big.Int
	DispatchedGroupId    *big.Int
}

//LogUpdateRandom is an onchain event that DOSProxy requests a system random number
type LogUpdateRandom struct {
	LastRandomness    *big.Int
	DispatchedGroupId *big.Int
}

//LogValidationResult is an onchain event that shows a quesry result
type LogValidationResult struct {
	TrafficType uint8
	TrafficId   *big.Int
	Message     []byte
	Signature   [2]*big.Int
	PubKey      [4]*big.Int
	Pass        bool
	Version     uint8
}

//LogGroupingInitiated is an onchain event that DOSProxy has requested a random number to form a new group
type LogGroupingInitiated struct {
	NumPendingNodes *big.Int
	GroupSize       *big.Int
}

//LogInsufficientWorkingGroup is an onchain event that means there are no enough working groups to mix with pending nodes to form a new group
type LogInsufficientWorkingGroup struct {
	NumWorkingGroups *big.Int
}

//LogInsufficientPendingNode is an onchain event that means there are no enough pending nodes to form a new group
type LogInsufficientPendingNode struct {
	NumPendingNodes *big.Int
}

//LogGrouping is an onchain event that DOSProxy requests the specified nodes to start DKG to generate a new pubkey
type LogGrouping struct {
	GroupId *big.Int
	NodeId  [][]byte
}

//LogPublicKeyAccepted is an onchain event that DOSProxy receives enough suggested pubkey so accepts it as a new pubkey
type LogPublicKeyAccepted struct {
	GroupId          *big.Int
	WorkingGroupSize *big.Int
}

//LogPublicKeySuggested is an onchain event that DOSProxy accepts a suggested pubkey
type LogPublicKeySuggested struct {
	GroupId   *big.Int
	Count     *big.Int
	GroupSize *big.Int
}

//LogGroupDissolve is an onchain event that DOSProxy requests to dissolve a specified group
type LogGroupDissolve struct {
	GroupId *big.Int
}

//LogUpdateGroupToPick is an onchain event that means GroupToPick is updated
type LogUpdateGroupToPick struct {
	OldNum *big.Int
	NewNum *big.Int
}

//LogUpdateGroupSize is an onchain event that means GroupSize is updated
type LogUpdateGroupSize struct {
	OldSize *big.Int
	NewSize *big.Int
}

//LogStartCommitReveal is an onchain event that means DOSProxy starts a new commit-revel process
type LogStartCommitReveal struct {
	Cid             *big.Int
	StartBlock      *big.Int
	CommitDuration  *big.Int
	RevealDuration  *big.Int
	RevealThreshold *big.Int
}

//LogCommit is an onchain event that means a secret is committed
type LogCommit struct {
	Cid        *big.Int
	From       common.Address
	Commitment [32]byte
}

//LogReveal is an onchain event that means a secret is revealed
type LogReveal struct {
	Cid    *big.Int
	From   common.Address
	Secret *big.Int
}

//LogRandom is an onchain event that means a new random is generated by a commit-reveal process with Cid
type LogRandom struct {
	Cid    *big.Int
	Random *big.Int
}
